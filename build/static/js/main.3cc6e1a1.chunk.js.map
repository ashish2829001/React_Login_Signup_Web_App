{"version":3,"sources":["components/header.js","components/footer.js","components/login.js","components/signup.js","components/dashboard.js","App.js","index.js"],"names":["Header","titleLink","first","firstLink","second","secLink","setIsAuth","className","style","height","to","id","onClick","e","localStorage","clear","alert","cursor","Footer","Login","a","preventDefault","cred","userName","document","getElementById","value","password","strCred","JSON","stringify","fetch","method","headers","body","result","json","success","setItem","details","message","onSubmit","login","htmlFor","type","Signup","history","useHistory","name","validator","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","then","res","push","catch","error","signup","DashBoard","getItem","parsedDetails","parse","width","borderRadius","display","flexDirection","alignItems","justifyContent","backgroundColor","App","styleForBody","margin","auth","token","useState","isAuth","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3cc6e1a1.chunk.js","sourcesContent":["// Herder component of webpage\n\n// Importing Link frpm react-router-dom\nimport {\n  Link\n} from 'react-router-dom';\n\n// Function Header with props\nfunction Header({ titleLink, first, firstLink, second, secLink, setIsAuth }) {\n\n  // function for logout activity\n  function logout() {\n    // clearing localstorage\n    localStorage.clear();\n    alert(\"Logging you out!\");\n    // changing status of isAuth\n    setIsAuth(false);\n  }\n\n  // returning header of webpage\n  return (\n    <nav className=\"navbar navbar-expand-lg bg-success p-2 text-dark bg-opacity-10\" style={{ height: \"7vh\" }}>\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to={titleLink}>MyApp</Link>\n      </div>\n      <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n          {\n            // displaying content of Header dynamically as per webpage\n            first !== \"\" ?\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active fw-bold\" aria-current=\"page\" to={firstLink}>{first}</Link>\n              </li> : \"\"\n          }\n\n          {\n            // displaying content of Header dynamically as per webpage\n            first !== \"\" ? \n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={secLink}>{second}</Link>\n              </li> \n              : \n              // this one is for dashboard to provide Logout button\n              <li className=\"nav-item\">\n                <p onClick={(e) => { logout(e) }} style={{ cursor: \"pointer\" }} className=\"nav-link\" >Logout</p>\n              </li>\n          }\n        </ul>\n      </div>\n    </nav>\n  );\n}\n// exporting component\nexport default Header;\n","// Footer Component\nfunction Footer() {\n  // return footer section of webPage\n    return (\n      <footer className=\"p-3 bg-dark text-white text-center\" style = {{ height : \"7vh\" }}>\n        CopyRight &copy; 2021 ---- Developed by Ashish Pratap Singh\n      </footer>\n    );\n  }\n  \n  // exporting component\n  export default Footer;\n  ","// Login component\n\n// Component with props\nfunction Login({ setIsAuth }) {\n  // function to validate the login details\n  async function login(e) {\n    // to prevent webpage from loading\n    e.preventDefault();\n    // getting credentials from form\n    let cred = {\n      userName: document.getElementById('username').value,\n      password: document.getElementById('password').value\n    };\n    // stringifying cred \n    let strCred = JSON.stringify(cred);\n    // calling login api\n    try {\n      let result = await fetch(\"http://127.0.0.1:3001/api/login\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"validationKey\": \"######^&dmckjfsjkdkfj$$$\"\n        },\n        body: strCred\n      });\n      result = await result.json();\n      // checking for result of API\n      if (result.success) {\n        // storing the details of user in Local Storage\n        localStorage.setItem('details', JSON.stringify(result.details));\n        // Setting isAuth to true\n        setIsAuth(true);\n      } else {\n        // removing the value of form input fields\n        document.getElementById(\"username\").value = \"\";\n        document.getElementById(\"password\").value = \"\";\n        // Notifying the mistake\n        alert(result.message);\n      }\n    } catch (error) {\n      // Handling error in try-block\n      return alert(\"Internal Server Error. Try again later!\");\n    }\n  }\n  // return the body of login page\n  return (\n    // form for getting login credentials\n    <form onSubmit={(e) => { login(e) }} className=\"container-sm\">\n      <p className=\"fw-bold text-center\">Login Here</p>\n      <div className=\"mb-3\">\n        <label htmlFor=\"username\" className=\"form-label\">Username</label>\n        <input type=\"text\" className=\"form-control\" id=\"username\" />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"password\" className=\"form-label\">Password</label>\n        <input type=\"password\" className=\"form-control\" id=\"password\" />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n    </form>\n  );\n}\n\n// exporting Login component\nexport default Login;","// Signup component\n\n// importing useHistory from react-router-dom\nimport { useHistory } from 'react-router-dom';\n// importing validator\nimport validator from 'validator';\n// Signup component\nfunction Signup() {\n  // declaring variable history\n  let history = useHistory();\n  // signup function to call signup api\n  function signup(e) {\n    // preventing default page loading\n    e.preventDefault();\n    // getting name, userName and password from form\n    let name = document.getElementById('name').value, password = document.getElementById('password1').value, userName = document.getElementById('username1').value;\n    // checking for empty fields\n    if (name === \"\" || userName === \"\" || password === \"\") {\n      return alert(\"Name, Username or Password is empty!\");\n    }\n    // validatong password (minCharacter = 6, atleast 1 lowercase letter, atleast 1 upper case letter, atleast 1 number and atleast 1 symbol)\n    if (validator.isStrongPassword(password, {\n      minLength: 8, minLowercase: 1,\n      minUppercase: 1, minNumbers: 1, minSymbols: 1\n    }) === false) {\n      // notifying on weak password\n      return alert(\"Please enter a strong password!\");\n    }\n    // creating cred object\n    let cred = {\n      name,\n      userName,\n      password\n    };\n    // stringifying cred\n    let strCred = JSON.stringify(cred);\n\n    // calling signup API\n    fetch(\"http://127.0.0.1:3001/api/register\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"validationKey\": \"######^&dmckjfsjkdkfj$$$\"\n      },\n      body: strCred\n    })\n      .then(res => res.json())\n      .then(result => {\n        // checking to response status\n        if (result.success) {\n          // notifying on successful registration\n          alert(result.message + \"\\n Please Login to continue.\");\n          // redirecting to login page\n          history.push(\"/\");\n        } else {\n          // clearing values of the inputfields in form\n          document.getElementById(\"name\").value = \"\";\n          document.getElementById(\"username1\").value = \"\";\n          document.getElementById(\"password1\").value = \"\";\n          // notifying mistake\n          return alert(result.message);\n        }\n      })\n      .catch(error => {\n        // handling error during calling API\n        return alert(\"Internal server Error. Try again later!\");\n      })\n  }\n\n  return (\n    // form of signup\n    <form onSubmit={(e) => { signup(e) }} className=\"container-sm\">\n      <div >\n        <p className=\"fw-bold text-center\">Signup Here</p>\n        <div className=\"mb-3\">\n          <label htmlFor=\"name\" className=\"form-label\">Name</label>\n          <input type=\"text\" className=\"form-control\" id=\"name\" />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username1\" />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password1\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Signup</button>\n      </div>\n    </form>\n  );\n}\n\n// exporting signup component\nexport default Signup;","// DashBoard component\nfunction DashBoard() {\n\n  // styling for div of classname with card\n  const styleSheet = {\n    width: \"600px\",\n    borderRadius: \"5px\",\n    display : \"flex\",\n    flexDirection : \"column\",\n    alignItems: \"center\",\n    justifyContent : \"center\",\n    backgroundColor: \"#edf5e4\"\n  }\n\n  // Accessing localStorage\n  const details = localStorage.getItem(\"details\");\n  const parsedDetails = JSON.parse(details);\n\n  // Returning Body of dashboard page with dynamically filled details of User\n    return (\n      <div className=\"card\" style = { styleSheet }>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">NAME - {parsedDetails.name}</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted\">Username - {parsedDetails.userName} </h6>\n          <p className=\"card-text\">Welcome to the DashBoard.</p>\n        </div>\n      </div>\n    );\n  }\n  \n  // exporting Component\n  export default DashBoard;\n  ","// importing all required components\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport DashBoard from './components/dashboard';\n\n// importing element to handle routing\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n// importing state from react\nimport React, { useState } from 'react';\n\nfunction App() {\n  // styleSheet for a div\n  let styleForBody = {\n    backgroundColor: \"\",\n    width: \"50vw\",\n    height: \"86vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"auto\"\n  }\n  // function for calling Authenticating API\n  const auth = async (token) => {\n    // creating cred object\n    let cred = {\n      token\n    };\n    // stringifying cred\n    let strCred = JSON.stringify(cred);\n    \n    try {\n      // calling auth api\n      let result = await fetch(\"http://127.0.0.1:3001/api/auth\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"validationKey\": \"######^&dmckjfsjkdkfj$$$\"\n        },\n        body: strCred\n      });\n      result = await result.json();\n      // checking status of response\n      if (result.success) {\n        // storing the details in local Storage\n        localStorage.setItem('details', JSON.stringify(result.details));\n        // changing status of isAuth to true  \n        setIsAuth(true);\n      }\n    } catch (err) {\n      // handling error in try-block\n      return alert(\"Internal Server Error. Please visit later!\");\n    }\n  }\n  // declaring a state for isAuth with initial value as false\n  const [isAuth, setIsAuth] = useState(false);\n  // fetching details from localStorage\n  let details = localStorage.getItem('details');\n  if (details !== null) {\n    // paring the json \n    let val = JSON.parse(details);\n    // calling auth function when details exists\n    auth(val.token);\n  }\n  \n  // returning the whole body of webpage\n  return (\n    <>\n      {/* implementing routing */}\n      <Router>\n        {\n          // checking whether the user is already logged in or not\n          isAuth ? \n            <>\n              {/* passing setIsAuth function as props */}\n              <Header titleLink=\"/\" first=\"\" firstLink=\"\" second=\"Logout\" secLink=\"\" setIsAuth={setIsAuth} />\n              <div style={styleForBody}>\n                <DashBoard style={styleForBody} />\n              </div>\n              <Footer />\n            </> \n          :\n          // routing for login and signup page\n            <Switch>\n              {/* route for login */}\n              <Route exact path=\"/\">\n                <>\n                  <Header titleLink=\"/\" first=\"Login\" firstLink=\"\" second=\"Signup\" secLink=\"/signup\" />\n                  <div style={styleForBody}>\n                    {/* passing setIsAuth function as props */}\n                    <Login setIsAuth={setIsAuth} style={styleForBody} />\n                  </div>\n                  <Footer />\n                </>\n              </Route>\n              {/* route for signup */}\n              <Route exact path=\"/signup\">\n                <>\n                  <Header titleLink=\"/signup\" first=\"Signup\" firstLink=\"/signup\" second=\"Login\" secLink=\"\" />\n                  <div style={styleForBody}>\n                    <Signup style={styleForBody} />\n                  </div>\n                  <Footer />\n                </>\n              </Route>\n            </Switch>\n        }\n      </Router>\n    </>\n  );\n}\n// exporting App component\nexport default App;","// importing required modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// putting App component in div with id = \"root\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}